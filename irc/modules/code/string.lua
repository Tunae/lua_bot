local utils = require("irc.utils")
local glob = require("glob")

return function(irc)
	irc:add_command("string", "string.upper", function(irc, state, channel, msg)
		local utf8 = require("utf8")
		return utf8.upper(msg)
	end, false)
	irc:add_command("string", "string.lower", function(irc, state, channel, msg)
		local utf8 = require("utf8")
		return utf8.lower(msg)
	end, false)
	irc:add_command("string", "string.byte", function(irc, state, channel, msg)
		local utf8 = require("utf8")
		return utils.escape_list({utf8.byte(msg, 1, -1)})
	end, false)
	irc:add_command("string", "string.reverse", function(irc, state, channel, msg)
		local utf8 = require("utf8")
		return utf8.reverse(msg)
	end, false)
	irc:add_command("string", "string.length", function(irc, state, channel, msg)
		local utf8 = require("utf8")
		return tostring(utf8.len(msg))
	end, false)
	irc:add_command("string", "string.capitalize", function(irc, state, channel, msg)
		return msg:sub(1, 1):upper() .. msg:sub(2):lower()
	end, false)
	irc:add_command("string", "string.strip", function(irc, state, channel, msg)
		return utils.strip(msg)
	end, false)
	irc:add_command("string", "string.lstrip", function(irc, state, channel, msg)
		return utils.lstrip(msg)
	end, false)
	irc:add_command("string", "string.rstrip", function(irc, state, channel, msg)
		return utils.rstrip(msg)
	end, false)
	irc:add_command("string", "string.startswith", function(irc, state, channel, s, startswith)
		return tostring(utils.startswith(s, startswith))
	end, false, "string", "string")
	irc:add_command("string", "string.split", function(irc, state, channel, s, separator, max)
		return utils.escape_list(utils.split(s, separator, max))
	end, false, "string", "string", "+int...")
	irc:add_command("string", "string.repeat", function(irc, state, channel, msg)
		local rep, str = unpack(utils.split(msg, " ", 1))
		rep = assert(tonumber(rep), "Invalid number")
		assert(rep and str, "Insufficient arguments")
		assert(rep * #str <= 300, "String is too long")
		return str:rep(rep)
	end, false)
	irc:add_command("string", "string.replace", function(irc, state, channel, s, search, replace, max)
		return (s:gsub(utils.escape_pattern(search),
		               utils.escape_pattern(replace),
		               max))
	end, false, "string", "string", "string", "+int...")
	irc:add_command("string", "string.find", function(irc, state, channel, s, search, ...)
		local result = s:find(utils.escape_pattern(search), ...)
		return tostring(assert(result, "Not found"))
	end, false, "string", "string", "int...")
	irc:add_command("string", "string.sub", function(irc, state, channel, s, ...)
		return s:sub(...)
	end, false, "string", "int...")
	irc:add_command("string", "string.glob", function(irc, state, channel, search, str)
		local pat = glob.globtopattern(search)
		return tostring(not not str:match(pat))
	end, false, "string", "string")
end
